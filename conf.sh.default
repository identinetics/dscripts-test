#!/usr/bin/env bash

main() {
    SCRIPTDIR=$(cd $(dirname $BASH_SOURCE[0]) && pwd)
    source $SCRIPTDIR/dscripts/conf_lib.sh  # load library functions
    configlib_version=2  # compatible version of conf_lib.sh
    check_version $configlib_version
    init_sudo
    _set_volume_root
    _set_image_and_container_name
    _set_users
    _set_buildargs
    _set_run_args
}


_set_volume_root() {
    # container volumes mounted to host paths, or symlinks to docker volumes
    #DOCKERVOL_SHORT="/dv'
    #DOCKERLOG_SHORT='/dl'
    #mkdir -p $DOCKERVOL_SHORT $DOCKERLOG_SHORT
    :
}


_set_image_and_container_name() {
    # IMGID qualifies image, container, user and IP adddress; this is helpful for managing
    # processes on the docker host etc.
    IMGID='99'  # range from 02 .. 99; must be unique per node (registered in github.com/identinetics/dscripts/templates/assigned-uids.adoc)
    PROJSHORT='dscripts-test'
    SERVICEDESCRIPTION=test_service
    export IMAGENAME="rhoerbe/${PROJSHORT}"  # you may or may not want to have an image id and/or staging tag
    export CONTAINERNAME="${IMGID}${PROJSHORT}"
    if [[ ! $JENKINS_HOME ]]; then
       export DOCKER_REGISTRY='index.docker.io'
    else
       unset DOCKER_REGISTRY
    fi
}


_set_users() {
    export CONTAINERUSER="$PROJSHORT${IMGID}"   # group and user to run container
    export CONTAINERUID="3430${IMGID}"     # gid and uid for CONTAINERUSER
    export START_AS_ROOT=      # 'True' (e.g. for apache to fall back to www user)
}


_set_buildargs() {
    export BUILDARGS=""
    #export DOCKERFILE_DIR=  # set this if the Docker environment is not in the dscripts submodule's parent directory (-> build will cd there)
    #export DSCRIPTS_DOCKERFILE='Dockerfile.rhel'   # defaults to 'Dockerfile' if unset or empty
    export REPO_STATUS='True'  # if set: generate 'REPO_STATUS' file to be included in docker image at /opt/etc/
    export MANIFEST_SCOPE='local'  # valid values: 'global', 'local'. Extension for manifest library.
                                   # must be local for targets. Requires write access to git for 'global'.
}


_set_run_args() {
    export ENVSETTINGS=""
    export STARTCMD=''
}


create_intercontainer_network() {
    export NETWORKSETTINGS="--net=host"
}


setup_vol_mapping() {
    # Create docker volume (-> map_docker_volume) or map a host dir (-> map_host_directory)
    # In both cases create a shortcut in the shortcut directory (DOCKERVOL_SHORT, DOCKERLOG_SHORT)
    mode=$1  # create (used by run.sh)/list (used by manage.sh)
    export VOLLIST=''
    export VOLMAPPING=''
    CONTAINER_GROUPWRITE=no
    #map_host_directory "$DOCKERVOL_SHORT/tmp/" '/tmp' 'Z'
}


container_status() {
    $sudo docker ps | head -1
    $sudo docker ps --all | egrep $CONTAINERNAME\$
}


main $@
